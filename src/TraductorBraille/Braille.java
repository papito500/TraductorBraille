package TraductorBraille;

import java.awt.Desktop;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.YES_NO_OPTION;

public class Braille extends javax.swing.JFrame {

    String AlmacenarC[] = new String[100];
    int cont = 0;

    public Braille() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtLetras = new javax.swing.JTextField();
        btnTraducir = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        letra10 = new javax.swing.JLabel();
        letra12 = new javax.swing.JLabel();
        letra14 = new javax.swing.JLabel();
        letra16 = new javax.swing.JLabel();
        letra18 = new javax.swing.JLabel();
        letra20 = new javax.swing.JLabel();

        jLabel4.setText("jLabel4");

        jLabel11.setText("jLabel11");

        jLabel17.setText("jLabel17");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtLetras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLetrasActionPerformed(evt);
            }
        });
        txtLetras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLetrasKeyReleased(evt);
            }
        });

        btnTraducir.setText("Traducir e Imprimir ");
        btnTraducir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraducirActionPerformed(evt);
            }
        });

        jButton1.setText("Borrar Todo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(letra16, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(letra18, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(218, 218, 218)
                        .addComponent(letra10)
                        .addGap(46, 46, 46))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(letra12, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(letra14, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(letra20)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtLetras, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTraducir)))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLetras, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTraducir, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(letra12)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(letra14)
                        .addComponent(letra16)
                        .addComponent(letra18))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(letra10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(letra20)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtLetrasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLetrasKeyReleased
       
        if (txtLetras.getText().isEmpty()) {

        } else {
            System.out.println(txtLetras.getText().substring(txtLetras.getText().length() - 1));

            if (AlmacenarC.length - 1 == cont) {
                JOptionPane.showMessageDialog(null, "Ya no se puede escribir...¡¡¡");
            } else {
                cont++;
                AlmacenarC[cont] = txtLetras.getText().substring(txtLetras.getText().length() - 1);
            }

        }
        
    }//GEN-LAST:event_txtLetrasKeyReleased
    
    private void btnTraducirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraducirActionPerformed

        JFileChooser Seleccionar_Archivo;
        Seleccionar_Archivo = new JFileChooser();
        int opcion = Seleccionar_Archivo.showSaveDialog(null);
        if (opcion == JFileChooser.APPROVE_OPTION) {
            File f;
            String cad = "";
            f = new File(Seleccionar_Archivo.getSelectedFile() + ".html");
            //Escritura
            try {

                FileWriter w = new FileWriter(f);
                try (BufferedWriter bw = new BufferedWriter(w); PrintWriter wr = new PrintWriter(bw)) {
                    wr.append("<HTML>"
                            + "	<HEAD>"
                            + "           <TITLE>Traductor a Braille</TITLE>"
                            + "	</HEAD>"
                            + "	<BODY bgcolor='blue'>"
                            + "           <H1>");

                    for (int i = 1; i < AlmacenarC.length; i++) {
                        if (AlmacenarC[i] == null) {
                            break;
                        } else {
                            cad += AlmacenarC[i] + "&ensp;";

                            if (AlmacenarC[i].equals(" ")) {
                                wr.append("&ensp;");
                            }
                            if (AlmacenarC[i].equals("a")) {
                                wr.append("&#10241;");
                            }
                            if (AlmacenarC[i].equals("b")) {
                                wr.append("&#10243;");
                            }
                            if (AlmacenarC[i].equals("c")) {
                                wr.append("&#10249;");
                            }
                            if (AlmacenarC[i].equals("d")) {
                                wr.append("&#10265;");
                            }
                            if (AlmacenarC[i].equals("e")) {
                                wr.append("&#10257;");
                            }
                            if (AlmacenarC[i].equals("f")) {
                                wr.append("&#10251;");
                            }
                            if (AlmacenarC[i].equals("g")) {
                                wr.append("&#10267;");
                            }
                            if (AlmacenarC[i].equals("h")) {
                                wr.append("&#10259;");
                            }
                            if (AlmacenarC[i].equals("i")) {
                                wr.append("&#10250;");
                            }
                            if (AlmacenarC[i].equals("j")) {
                                wr.append("&#10266;");
                            }
                            if (AlmacenarC[i].equals("k")) {
                                wr.append("&#10245;");
                            }
                            if (AlmacenarC[i].equals("l")) {
                                wr.append("&#10247;");
                            }
                            if (AlmacenarC[i].equals("m")) {
                                wr.append("&#10253;");
                            }
                            if (AlmacenarC[i].equals("n")) {
                                wr.append("&#10269;");
                            }
                            if (AlmacenarC[i].equals("o")) {
                                wr.append("&#10261;");
                            }
                            if (AlmacenarC[i].equals("p")) {
                                wr.append("&#10255;");
                            }
                            if (AlmacenarC[i].equals("q")) {
                                wr.append("&#10271;");
                            }
                            if (AlmacenarC[i].equals("r")) {
                                wr.append("&#10263;");
                            }
                            if (AlmacenarC[i].equals("s")) {
                                wr.append("&#10254;");
                            }
                            if (AlmacenarC[i].equals("t")) {
                                wr.append("&#10270;");
                            }
                            if (AlmacenarC[i].equals("u")) {
                                wr.append("&#10277;");
                            }
                            if (AlmacenarC[i].equals("v")) {
                                wr.append("&#10279;");
                            }
                            if (AlmacenarC[i].equals("w")) {
                                wr.append("&#10298;");
                            }
                            if (AlmacenarC[i].equals("x")) {
                                wr.append("&#10285;");
                            }
                            if (AlmacenarC[i].equals("y")) {
                                wr.append("&#10301;");
                            }
                            if (AlmacenarC[i].equals("z")) {
                                wr.append("&#10293;");
                            }
                        }

                    }
                    wr.append("</H1> <H2>" + cad + "</H2> "
                            + "     </BODY>"
                            + "</HTML>");

                    ICodigoBraille codigoBraille = new Traductor(cad);
                    codigoBraille.Mensaje();
                } catch (IOException e) {
                    System.out.println(e);
                }
            } catch (Exception ex) {
                System.out.println(ex);
            }
            int respuesta = JOptionPane.showConfirmDialog(null, "Desea Abrir el documento", "Alerta!", JOptionPane.YES_NO_OPTION);
            if (respuesta == YES_NO_OPTION) {
                try {
                    File path = new File(Seleccionar_Archivo.getSelectedFile() + ".html");
                    Desktop.getDesktop().open(path);
                } catch (IOException ex) {
                    System.out.println(ex);
                }
            }

        }

    }//GEN-LAST:event_btnTraducirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        txtLetras.setText("");
          cont = 0;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtLetrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLetrasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLetrasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Braille.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Braille.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Braille.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Braille.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Braille().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTraducir;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel letra10;
    private javax.swing.JLabel letra12;
    private javax.swing.JLabel letra14;
    private javax.swing.JLabel letra16;
    private javax.swing.JLabel letra18;
    private javax.swing.JLabel letra20;
    private javax.swing.JTextField txtLetras;
    // End of variables declaration//GEN-END:variables
}
